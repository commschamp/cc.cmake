name: Github Actions Build

on:
  push:
    tags-ignore:
      - '**'

env:
  CC_CMAKE_CONFIG: config/All.cmake

jobs:

  build_gcc_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [9, 10, 11, 12]
        cpp: [17, 20]
        qt_ver: [5, 6]

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev qt6-base-dev libqt${{matrix.qt_ver}}serialport${{matrix.qt_ver}}-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCMAKE_PROJECT_INCLUDE=${{env.CC_CMAKE_CONFIG}} -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}}
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}}
      env:
        VERBOSE: 1         

  build_gcc_ubuntu_24_04:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [13, 14]
        cpp: [17, 20, 23]
        qt_ver: [5, 6]
        exclude:
          - cc_ver: 13
            cpp: 23  

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev qt6-base-dev libqt${{matrix.qt_ver}}serialport${{matrix.qt_ver}}-dev gcc-${{matrix.cc_ver}} g++-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCMAKE_PROJECT_INCLUDE=${{env.CC_CMAKE_CONFIG}} -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}}
      env:
        CC: gcc-${{matrix.cc_ver}}
        CXX: g++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}}
      env:
        VERBOSE: 1 
      
  build_clang_ubuntu_22_04:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [11, 12, 13, 14, 15]
        cpp: [17, 20]
        qt_ver: [5, 6]
        exclude:
          - cc_ver: 11
            cpp: 20
          - cc_ver: 12
            cpp: 20   
          - cc_ver: 13
            cpp: 20   
          - cc_ver: 14
            cpp: 20      

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev qt6-base-dev libqt${{matrix.qt_ver}}serialport${{matrix.qt_ver}}-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCMAKE_PROJECT_INCLUDE=${{env.CC_CMAKE_CONFIG}} -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}}
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}}
      env:
        VERBOSE: 1 

  build_clang_ubuntu_24_04:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        cc_ver: [16, 17, 18]
        cpp: [17, 20, 23]
        qt_ver: [5, 6]
        exclude:
          - cc_ver: 16
            cpp: 23
          - cc_ver: 17
            cpp: 23     

    steps:
    - uses: actions/checkout@v4

    - name: Prepare Install
      run: sudo apt-get update --fix-missing    
      
    - name: Install Packages
      run: sudo apt install qtbase5-dev qt6-base-dev libqt${{matrix.qt_ver}}serialport${{matrix.qt_ver}}-dev clang-${{matrix.cc_ver}}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build      

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install \
          -DCMAKE_CXX_STANDARD=${{matrix.cpp}} -DCMAKE_PROJECT_INCLUDE=${{env.CC_CMAKE_CONFIG}} -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}}
      env:
        CC: clang-${{matrix.cc_ver}}
        CXX: clang++-${{matrix.cc_ver}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config ${{matrix.type}}
      env:
        VERBOSE: 1 
    
  build_msvc_2019:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        type: [Debug, Release, MinSizeRel]
        arch: [x64]
        cpp: [17]
        qt_ver: [5, 6]

    steps:
    - uses: actions/checkout@v4

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build   

    - name: Install Boost
      shell: cmd
      run: |
        choco install boost-msvc-14.2 --version=1.85.0

    - name: Install Curl
      shell: cmd
      run: |
        choco install curl

    - name: Install Qt
      shell: cmd
      run: |
        curl -L https://github.com/martinrotter/qt-minimalistic-builds/releases/download/${{env.QT_VER}}/qt-${{env.QT_VER}}-dynamic-msvc2019-x86_64.7z -o ${{runner.workspace}}/qt.7z
        7z x ${{runner.workspace}}/qt.7z -o${{runner.workspace}}/qt
      env:
        QT_VER: ${{matrix.qt_ver == '5' && '5.15.3' || '6.2.2'}}

    - name: Configure CMake
      shell: cmd
      working-directory: ${{runner.workspace}}/build
      run: |
        cmake %GITHUB_WORKSPACE% -A ${{matrix.arch}} -DCMAKE_BUILD_TYPE=${{matrix.type}} -DCMAKE_INSTALL_PREFIX=install ^
          -DCMAKE_PREFIX_PATH="${{runner.workspace}}/qt/qt-${{env.QT_VER}}-dynamic-msvc2019-x86_64" -DCMAKE_CXX_STANDARD=${{matrix.cpp}} ^
          -DCMAKE_POLICY_DEFAULT_CMP0167=OLD -DBoost_USE_STATIC_LIBS=ON ^
          -DCMAKE_PROJECT_INCLUDE=${{env.CC_CMAKE_CONFIG}} -DOPT_QT_MAJOR_VERSION=${{matrix.qt_ver}} ^
          -DOPT_CC_UBLOX_PROTOCOL_CC_TOOLS_PLUGIN=OFF
      env:
        QT_VER: ${{matrix.qt_ver == '5' && '5.15.3' || '6.2.2'}}

    - name: Build Target 
      working-directory: ${{runner.workspace}}/build
      shell: cmd
      run: cmake --build . --config ${{matrix.type}}
      env:
        VERBOSE: 1 
