# Default versions
set (COMMS_DEFAULT_TAG "v5.2.2")
set (CC_TOOLS_QT_DEFAULT_TAG "v5.2")
set (COMMSDSL_DEFAULT_TAG "v6.3")
set (CC_DEMO1_GENERATED_DEFAULT_TAG "v2.6")
set (CC_DEMO2_GENERATED_DEFAULT_TAG "v2.6")
set (CC_DEMO3_GENERATED_DEFAULT_TAG "v2.6")
set (CC_MQTT311_GENERATED_DEFAULT_TAG "v2.6")
set (CC_MQTT5_GENERATED_DEFAULT_TAG "v2.6")
set (CC_MQTTSN_GENERATED_DEFAULT_TAG "v2.6")
set (CC_UBLOX_GENERATED_DEFAULT_TAG "v2.6")
set (CC_X509_GENERATED_DEFAULT_TAG "v0.8")
set (CC_MQTTSN_LIBS_DEFAULT_TAG "v1.0.7")
set (CC_MQTT5_LIBS_DEFAULT_TAG "v0.3.1")
set (CC_DEMO1_PROTOCOL_CC_TOOLS_PLUGIN_DEFAULT_TAG "${CC_DEMO1_GENERATED_DEFAULT_TAG}")
set (CC_DEMO2_PROTOCOL_CC_TOOLS_PLUGIN_DEFAULT_TAG "${CC_DEMO2_GENERATED_DEFAULT_TAG}")
set (CC_DEMO3_PROTOCOL_CC_TOOLS_PLUGIN_DEFAULT_TAG "${CC_DEMO3_GENERATED_DEFAULT_TAG}")
set (CC_MQTT311_PROTOCOL_CC_TOOLS_PLUGIN_DEFAULT_TAG "${CC_MQTT311_GENERATED_DEFAULT_TAG}")
set (CC_MQTT5_PROTOCOL_CC_TOOLS_PLUGIN_DEFAULT_TAG "${CC_MQTT5_GENERATED_DEFAULT_TAG}")
set (CC_MQTTSN_PROTOCOL_CC_TOOLS_PLUGIN_DEFAULT_TAG "${CC_MQTTSN_GENERATED_DEFAULT_TAG}")
set (CC_UBLOX_PROTOCOL_CC_TOOLS_PLUGIN_DEFAULT_TAG "${CC_UBLOX_GENERATED_DEFAULT_TAG}")
set (CC_MQTT5_CLIENT_FILTER_CC_TOOLS_PLUGIN_DEFAULT_TAG "v0.2")

# Dependencies
list (APPEND CC_TOOLS_QT_DEPENDS comms)
list (APPEND CC_DEMO1_GENERATED_DEPENDS comms)
list (APPEND CC_DEMO2_GENERATED_DEPENDS comms)
list (APPEND CC_DEMO3_GENERATED_DEPENDS comms)
list (APPEND CC_MQTT311_GENERATED_DEPENDS comms)
list (APPEND CC_MQTT5_GENERATED_DEPENDS comms)
list (APPEND CC_MQTTSN_GENERATED_DEPENDS comms)
list (APPEND CC_UBLOX_GENERATED_DEPENDS comms)
list (APPEND CC_X509_GENERATED_DEPENDS comms)
list (APPEND CC_MQTTSN_LIBS_DEPENDS cc.mqttsn.generated cc.mqtt311.generated comms)
list (APPEND CC_MQTT5_LIBS_DEPENDS cc.mqtt5.generated comms)
list (APPEND CC_DEMO1_PROTOCOL_CC_TOOLS_PLUGIN_DEPENDS cc.demo1.generated cc_tools_qt)
list (APPEND CC_DEMO2_PROTOCOL_CC_TOOLS_PLUGIN_DEPENDS cc.demo2.generated cc_tools_qt)
list (APPEND CC_DEMO3_PROTOCOL_CC_TOOLS_PLUGIN_DEPENDS cc.demo3.generated cc_tools_qt)
list (APPEND CC_MQTT311_PROTOCOL_CC_TOOLS_PLUGIN_DEPENDS cc.mqtt311.generated cc_tools_qt)
list (APPEND CC_MQTT5_PROTOCOL_CC_TOOLS_PLUGIN_DEPENDS cc.mqtt5.generated cc_tools_qt)
list (APPEND CC_MQTTSN_PROTOCOL_CC_TOOLS_PLUGIN_DEPENDS cc.mqttsn.generated cc_tools_qt)
list (APPEND CC_UBLOX_PROTOCOL_CC_TOOLS_PLUGIN_DEPENDS cc.ublox.generated cc_tools_qt)
list (APPEND CC_MQTT5_CLIENT_FILTER_CC_TOOLS_PLUGIN_DEPENDS cc.mqtt5.libs cc_tools_qt)

# Extra flags
if (OPT_CC_MQTT5_CLIENT_FILTER_CC_TOOLS_PLUGIN)
    # cc.mqtt5.libs requires PIC compilation when linked to the shared module.
    list (APPEND CC_MQTT5_LIBS_CMAKE_ARGS -DCC_MQTT5_CLIENT_LIB_FORCE_PIC=ON)
endif ()

set (boost_enabled OFF)
set (boost_params)

macro (add_boost_param name)
    if (name)
        list (APPEND boost_params -D${name}=${${name}}) 
    endif ()
endmacro ()

find_package (Boost QUIET)
if (TARGET Boost::boost)
    set (boost_enabled ON)
    add_boost_param(BOOST_ROOT)
    add_boost_param(BOOST_INCLUDEDIR)
    add_boost_param(BOOST_LIBRARYDIR)
    add_boost_param(Boost_NO_SYSTEM_PATHS)
    add_boost_param(Boost_ADDITIONAL_VERSIONS)
    add_boost_param(Boost_USE_DEBUG_LIBS)
    add_boost_param(Boost_USE_RELEASE_LIBS)
    add_boost_param(Boost_USE_MULTITHREADED)
    add_boost_param(Boost_USE_STATIC_LIBS)
    add_boost_param(Boost_USE_STATIC_RUNTIME)
    add_boost_param(Boost_LIB_PREFIX)

    list (APPEND CC_MQTT5_LIBS_CMAKE_ARGS ${boost_params})
endif ()

list (APPEND CC_MQTT5_LIBS_CMAKE_ARGS -DCC_MQTT5_CLIENT_APPS=${boost_enabled})
